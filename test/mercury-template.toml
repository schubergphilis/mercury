[settings]
manage_network_interfaces = "no"
enable_proxy = "yes"
[web]
binding = "localhost"
port = 9001
path = "tools/html"
[web.tls]
certificatekey = "test/ssl/self_signed_certificate.key"
certificatefile = "test/ssl/self_signed_certificate.crt"
minversion = "VersionTLS12"
ciphersuites = ["TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", "TLS_RSA_WITH_AES_256_GCM_SHA384", "TLS_RSA_WITH_AES_256_CBC_SHA"]
curvepreferences = ["CurveP521", "CurveP384", "CurveP256"]
[web.auth.password.users]
test = "9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08"
#[web.auth.ldap]
#host = "localhost"
#port = 389
#method = "tls"
#binddn = "OU=Users,DC=example,DC=com"
#filter = "(&(objectClass=organizationalPerson)(sAMAccountName=%s))"
#domain = "example"
#[web.auth.ldap.tls]
#insecureskipverify = true
[cluster.binding]
name = "localhost1"
addr = "127.0.0.1:9000"
authkey = "test"
[[cluster.nodes]]
name = "localhost2"
addr = "127.0.0.1:10000"
authkey = "test"
[logging]
level = "debug"
output = "stdout"
[cluster.settings]
connection_retry_count = 3
connection_retry_interval = 10
connection_timeout = 10
ping_interval = 5
ping_timeout =  11
port = 9000
[cluster.tls]
certificatekey = "test/ssl/self_signed_certificate.key"
certificatefile = "test/ssl/self_signed_certificate.crt"
minversion = "VersionTLS12"
ciphersuites = ["TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", "TLS_RSA_WITH_AES_256_GCM_SHA384", "TLS_RSA_WITH_AES_256_CBC_SHA"]
curvepreferences = ["CurveP521", "CurveP384", "CurveP256"]
insecureskipverify = true
[dns]
binding = "0.0.0.0"
port = 15353
allow_forwarding = [ "%LOCALIP%/32", "::1/128" ]
#allowed_requests = [ "A", "AAAA" ]
[dns.domains."domain.nl"]
ttl = 11
[dns.domains."domain.nl".soa]
email = "hostmaster.domain.nl"
expire = 3600
minimum = 10
refresh = 30
retry = 30
[loadbalancer.settings]
default_balance_method = "roundrobin"
[dns.domains."glb.example.com"]
ttl = 12
[[dns.domains."glb.example.com".records]]
name = "test123"
type = "A"
target = "1.2.3.4"
#[[dns.domains."glb.example.com".records]]
#name = "test124"
#type = "A"
#target = "1.2.3.5"
[[dns.domains."glb.example.com".records]]
name = "test123"
type = "AAAA"
target = "::1"
[[dns.domains."glb.example.com".records]]
name = "test123"
type = "AAAA"
target = "22::2"
[[dns.domains."glb.example.com".records]]
name = ""
type = "CAA"
target = "0 issue \"bla.org\";"
[[dns.domains."glb.example.com".records]]
name = ""
type = "MX"
target = "10 mx1.glb.example.com"
[[dns.domains."glb.example.com".records]]
name = ""
type = "MX"
target = "20 mx2.glb.example.com"
[[dns.domains."glb.example.com".records]]
name = ""
type = "SOA"
target = "lb1.glb.example.com. hostmaster.glb.example.com. ###SERIAL### 3600 10 30 30"
[[dns.domains."glb.example.com".records]]
name = ""
type = "NS"
target = "lb1.glb.example.com"
[[dns.domains."glb.example.com".records]]
name = ""
type = "NS"
target = "lb2.glb.example.com"
[[dns.domains."glb.example.com".records]]
name = "lb1"
type = "A"
target = "1.2.3.4"
[[dns.domains."glb.example.com".records]]
name = "lb2"
type = "A"
target = "5.6.7.8"
[[dns.domains."glb.example.com".records]]
name = "mx1"
type = "A"
target = "5.6.7.8"
[[dns.domains."glb.example.com".records]]
name = "mx2"
type = "A"
target = "5.6.7.8"
[[dns.domains."glb.example.com".records]]
name = ""
type = "A"
target = "5.6.7.8"
[dns.domains."glb.example.com".soa]
email = "hostmaster.glb.example.com"
expire = 3600
minimum = 10
refresh = 30
retry = 30
[loadbalancer.pools.INTERNAL_VIP.backends.example]
hostnames = ["default", "www.glb.example.com"]
connectmode="http"
[loadbalancer.pools.INTERNAL_VIP.backends.example.balance]
local_topology = "dc2"
preference = 0
# method = "topology,roundrobin"
method = "leastconnected"
[loadbalancer.pools.INTERNAL_VIP.backends.example.dnsentry]
domain = "glb.example.com"
hostname = "www"
[[loadbalancer.pools.INTERNAL_VIP.backends.example.healthchecks]]
type = "tcpping"
ip = "%LOCALIP%"
port = 9001
[[loadbalancer.pools.INTERNAL_VIP.backends.example.healthchecks]]
[[loadbalancer.pools.INTERNAL_VIP.backends.example.healthchecks]]
interval = 10
httpreply = "login"
httpstatus = 200
httprequest = "http://www.example.com?password=hello"
retries = 2
timeout = 10
type = "httpget"
online_state = "offline"
offline_state = "online"
[[loadbalancer.pools.INTERNAL_VIP.backends.example.nodes]]
ip = "95.142.102.176"
port = 80
hostname = "server2"
[[loadbalancer.pools.INTERNAL_VIP.backends.example.nodes]]
ip = "95.142.102.175"
port = 80
hostname = "server1"
[[loadbalancer.pools.INTERNAL_VIP.backends.example.nodes]]
ip = "95.142.102.176"
port = 80
hostname = "server3"
[[loadbalancer.pools.INTERNAL_VIP.backends.example.nodes]]
ip = "95.142.102.175"
port = 80
hostname = "server4"
[loadbalancer.pools.INTERNAL_VIP.listener]
mode = "http"
ip = "%LOCALIP%"
port = 9003
maxconnections = 9999
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "remove"
conditiontype = "header"
conditionmatch = "Server"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
header_key= "LBIP"
header_value = "###LB_IP###"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
header_key = "NDID"
header_value = "###NODE_ID###"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
header_key = "NDIP"
header_value = "###NODE_IP###"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
cookie_key = "stky"
cookie_value = "###NODE_ID###"
cookie_expire = "24h"
cookie_secure = true
cookie_httponly = true
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
cookie_expire = "24h"
cookie_httponly = false
cookie_key = "stky"
cookie_secure = true
cookie_value = "###NODE_ID###"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
header_key = "X-Loc"
header_value = "E"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "remove"
header_key = "Server"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
header_key = "X-FRAME-OPTIONS"
header_value = "DENY"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
header_key = "X-XSS-Protection"
header_value = "1; mode=block"
[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
action = "add"
header_key = "X-Content-Type-Options"
header_value = "nosniff"
#[[loadbalancer.pools.INTERNAL_VIP.acls]]
#header = "hostname"
#match = "my.domain.nl"
#name = "acl_my_domain_nl"
#type = "header"
#[[loadbalancer.pools.INTERNAL_VIP.inboundacls]]
#action = "add"
#actiontype = "header"
#actionstring = "X-Forwarded-For: ###CLIENT_IP###"
#conditiontype = "header"
#conditionmatch = "!/^X-Forwarded-For: /"
#[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
#action = "add"
#actiontype = "header"
#actionstring = "Site: ###NODE_ID###"
#conditiontype = ""
#conditionmatch = ""
#[[loadbalancer.pools.INTERNAL_VIP.outboundacls]]
#action = "remove"
#conditiontype = "header"
#conditionmatch = "X-Powered-By"
#[[loadbalancer.pools.INTERNAL_VIP.acls]]
#header = "hostname"
#match = "mypp2.domain.nl"
#name = "acl_myapp2_domain_nl"
#type = "header"

# Loadbalancing tests
[loadbalancer.pools.INTERNAL_VIP_REDIRECT.listener]
mode = "http"
ip = "127.0.0.1"
port = 9004
[loadbalancer.pools.INTERNAL_VIP_REDIRECT.backends.redirect]
hostnames = ["default"]
connectmode = "internal"
[[loadbalancer.pools.INTERNAL_VIP_REDIRECT.backends.redirect.outboundacls]]
action = "add"
header_key = "Location"
header_value = "https://###REQ_HOST###:9010###REQ_PATH###"
[[loadbalancer.pools.INTERNAL_VIP_REDIRECT.backends.redirect.outboundacls]]
action = "replace"
status_code = 301

# Loadbalancing tests
[loadbalancer.pools.INTERNAL_VIP_LB.errorpage]
file = 'tools/html/sorry.html'
trigger_threshold = 600
[loadbalancer.pools.INTERNAL_VIP_LB.maintenancepage]
file = 'tools/html/maintenance.html'
[loadbalancer.pools.INTERNAL_VIP_LB.listener]
mode = "https"
#ip = "127.0.0.1"
ip = "%LOCALIP%"
port = 9005
readtimeout = 50
writetimeout = 50
maxconnections = 10
[loadbalancer.pools.INTERNAL_VIP_LB.listener.tls]
certificatekey = "test/ssl/self_signed_certificate.key"
certificatefile = "test/ssl/self_signed_certificate.crt"
minversion = "VersionTLS12"
#ciphersuites = ["TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", "TLS_RSA_WITH_AES_256_GCM_SHA384", "TLS_RSA_WITH_AES_256_CBC_SHA"]
ciphersuites = ["TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"]
curvepreferences = ["CurveP521", "CurveP384", "CurveP256"]
ocspstapling = true
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lc]
hostnames = ["leastconnected.glb.example.com"]
connectmode = "https"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lc.tls]
certificatekey = "test/ssl/self_signed_certificate.key"
certificatefile = "test/ssl/self_signed_certificate.crt"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lc.balance]
method = "sticky,leastconnected"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lc.dnsentry]
domain = "glb.example.com"
hostname = "leastconnected"
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lc.nodes]]
ip = "95.142.102.176"
port = 443
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lc.nodes]]
ip = "95.142.102.175"
port = 443
#[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lc.errorpage]
#file = 'tools/html/sorry2.html'
#trigger_threshold = 500
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "remove"
conditiontype = "header"
conditionmatch = "Server"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
header_key= "LBIP"
header_value = "###LB_IP###"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
header_key = "NDID"
header_value = "###NODE_ID###"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
header_key = "NDIP"
header_value = "###NODE_IP###"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
cookie_expire = "24h"
cookie_httponly = false
cookie_key = "stky"
cookie_secure = true
cookie_value = "###NODE_ID###"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "replace"
cookie_expire = "24h"
cookie_httponly = false
cookie_key = "stky"
cookie_secure = true
cookie_value = "###NODE_ID###"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
cookie_expire = "24h"
cookie_httponly = false
cookie_key = "mercid"
cookie_secure = true
cookie_value = "###UUID###"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
header_key = "X-Loc"
header_value = "E"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "remove"
header_key = "Server"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
header_key = "X-FRAME-OPTIONS"
header_value = "DENY"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
header_key = "X-XSS-Protection"
header_value = "1; mode=block"
[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
action = "add"
header_key = "X-Content-Type-Options"
header_value = "nosniff"
# HSTS doesn't like self-signed certificats ;-)
#[[loadbalancer.pools.INTERNAL_VIP_LB.outboundacls]]
#action = "add"
#header_key = "Strict-Transport-Security"
#header_value = "max-age=47347200; includeSubDomains"
#[[loadbalancer.pools.INTERNAL_VIP_LB.inboundacls]]
#action = "deny"
#header_key = "User-Agent"
#header_value = ".*Macintash.*"

#[[loadbalancer.pools.INTERNAL_VIP_LB.inboundacls]]
#action = "allow"
#cidrs = ["10.10.0.197/32", "%LOCALIP%/32"]

# leasttraffic
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lt]
hostnames = ["leasttraffic.glb.example.com"]
connectmode = "http"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lt.balance]
method = "leasttraffic"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lt.dnsentry]
domain = "glb.example.com"
hostname = "leasttraffic"
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lt.nodes]]
ip = "95.142.102.176"
port = 80
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_lt.nodes]]
ip = "95.142.102.175"
port = 80

# preference
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_pr]
hostnames = ["preference.glb.example.com"]
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_pr.balance]
method = "preference"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_pr.dnsentry]
domain = "glb.example.com"
hostname = "preference"
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_pr.healthchecks]]
# httpreply = "login"
# httpstatus = 200
# httprequest = "http://preference.glb.example.com"
# httppostdata = "<bla>"
# type = "httppost"
# httpheaders = ["Content-Type: application/soap+xml; charset=utf-8"]

[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_pr.nodes]]
ip = "95.142.102.175"
port = 80
preference = 1


# random
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rnd]
connectmode = "http"
hostnames = ["random.glb.example.com"]
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rnd.balance]
method = "random"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rnd.dnsentry]
domain = "glb.example.com"
hostname = "random"
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rnd.nodes]]
ip = "95.142.102.176"
port = 80
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rnd.nodes]]
ip = "95.142.102.175"
port = 80

# roundrobin
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rr]
hostnames = ["roundrobin.glb.example.com"]
connectmode = "http"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rr.tls]
certificatekey = "test/ssl/self_signed_certificate.key"
certificatefile = "test/ssl/self_signed_certificate.crt"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rr.balance]
method = "roundrobin"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rr.dnsentry]
domain = "glb.example.com"
hostname = "roundrobin"
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rr.nodes]]
ip = "95.142.102.176"
port = 80
# [[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_rr.nodes]]
#ip = "95.142.102.175"
#port = 80

# topology
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_to]
hostnames = ["topology.glb.example.com"]
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_to.balance]
method = "topology"
local_topology = "dc2"
active_passive = "yes"
[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_to.dnsentry]
domain = "glb.example.com"
hostname = "topology"
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_to.nodes]]
ip = "95.142.102.176"
port = 81
# [[loadbalancer.pools.INTERNAL_VIP_LB.backends.example_to.nodes]]
# ip = "95.142.102.175"
# port = 80

# Redirect all else
[loadbalancer.pools.INTERNAL_VIP_LB.backends.redirect_to_other]
connectmode = "internal"
hostnames = ["default"]
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.redirect_to_other.outboundacls]]
action = "add"
header_key = "Location"
header_value = "https://other.example.com/"
[[loadbalancer.pools.INTERNAL_VIP_LB.backends.redirect_to_other.outboundacls]]
action = "add"
status_code = 301

# MX TCP test
[loadbalancer.pools.INTERNAL_VIP_MX.listener]
mode = "tcp"
#ip = "127.0.0.1"
ip = "%LOCALIP%"
port = 9006
[loadbalancer.pools.INTERNAL_VIP_MX.backends.example_mx]
hostnames = ["mx.glb.example.com"]
connectmode = "tcp"
[loadbalancer.pools.INTERNAL_VIP_MX.backends.example_mx.balance]
method = "responsetime"
[loadbalancer.pools.INTERNAL_VIP_MX.backends.example_mx.dnsentry]
domain = "glb.example.com"
hostname = "mx"
[[loadbalancer.pools.INTERNAL_VIP_MX.backends.example_mx.healthchecks]]
type = "tcpdata"
tcpreply = "220 "
[[loadbalancer.pools.INTERNAL_VIP_MX.backends.example_mx.nodes]]
ip = "95.142.102.176"
port = 25
[[loadbalancer.pools.INTERNAL_VIP_MX.backends.example_mx.nodes]]
ip = "95.142.102.175"
port = 25


# MX TCP test
[loadbalancer.pools.INTERNAL_VIP_ONE.listener]
mode = "tcp"
#ip = "127.0.0.1"
ip = "%LOCALIP%"
port = 9007
[loadbalancer.pools.INTERNAL_VIP_ONE.backends.example_mx]
hostnames = ["one.glb.example.com"]
connectmode = "tcp"
[loadbalancer.pools.INTERNAL_VIP_ONE.backends.example_mx.balance]
method = "responsetime"
clusternodes = 1
[loadbalancer.pools.INTERNAL_VIP_ONE.backends.example_mx.dnsentry]
domain = "glb.example.com"
hostname = "one"
[[loadbalancer.pools.INTERNAL_VIP_ONE.backends.example_mx.healthchecks]]
type = "tcpdata"
tcpreply = "220 "
[[loadbalancer.pools.INTERNAL_VIP_ONE.backends.example_mx.nodes]]
ip = "95.142.102.176"
port = 25

# Networks for Topology based loadbalancing
[loadbalancer.networks.dc1]
cidrs = ["10.188.28.0/22", "127.0.0.1/8"]
[loadbalancer.networks.dc2]
cidrs = ["10.188.24.0/22"]


[loadbalancer.pools.INTERNAL_VIP_DNSONLY.listener]
[loadbalancer.pools.INTERNAL_VIP_DNSONLY.backends.www]
[loadbalancer.pools.INTERNAL_VIP_DNSONLY.backends.www.balance]
method = "leasttraffic"
[loadbalancer.pools.INTERNAL_VIP_DNSONLY.backends.www.dnsentry]
domain = "dnsonly.nl"
hostname = "www"
ip = "10.20.30.40"
[[loadbalancer.pools.INTERNAL_VIP_DNSONLY.backends.www.nodes]]
ip = "95.142.102.176"
port = 80
[[loadbalancer.pools.INTERNAL_VIP_DNSONLY.backends.www.nodes]]
ip = "95.142.102.175"
port = 80

[dns.domains."dnsonly.nl"]
ttl = 12
[[dns.domains."dnsonly.nl".records]]
name = "test123"
type = "A"
target = "1.2.3.4"
